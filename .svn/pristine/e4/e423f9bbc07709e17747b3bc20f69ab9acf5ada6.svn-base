<!DOCTYPE HTML>
<!--
	ZeroFour by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
<head>
    <title>No Sidebar - ZeroFour by HTML5 UP</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!--[if lte IE 8]><script src="/assets/js/ie/html5shiv.js"></script><![endif]-->
    <link rel="stylesheet" href="/assets/css/main.css" />
    <!--[if lte IE 8]><link rel="stylesheet" href="/assets/css/ie8.css" /><![endif]-->
    <!--[if lte IE 9]><link rel="stylesheet" href="/assets/css/ie9.css" /><![endif]-->
    <style>
        html, body {width:100%;height:100%;margin:0;padding:0;}
        .map_wrap {position:relative;overflow:hidden;width:100%;height:350px;}
        .radius_border{border:1px solid #919191;border-radius:5px;}
        .custom_zoomcontrol {position:relative;float:right;top:100px;right:15px;width:36px;height:80px;overflow:hidden;z-index:2;background-color:#f5f5f5;}
        .custom_zoomcontrol span {display:block;width:36px;height:40px;text-align:center;cursor:pointer;}
        .custom_zoomcontrol span img {width:15px;padding:12px 0;border:none;}
        .custom_zoomcontrol span:first-child{border-bottom:1px solid #bfbfbf;}
        .dot {overflow:hidden;float:left;width:12px;height:12px;background: url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/mini_circle.png');}
        .dotOverlay {position:relative;bottom:10px;border-radius:6px;border: 1px solid #ccc;border-bottom:2px solid #ddd;float:left;font-size:12px;padding:5px;background:#fff;}
        .dotOverlay:nth-of-type(n) {border:0; box-shadow:0px 1px 2px #888;}
        .number {font-weight:bold;color:#ee6152;}
        .dotOverlay:after {content:'';position:absolute;margin-left:-6px;left:50%;bottom:-8px;width:11px;height:8px;background:url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white_small.png')}
        .distanceInfo {position:relative;top:5px;left:5px;list-style:none;margin:0;}
        .distanceInfo .label {display:inline-block;width:50px;}
        .distanceInfo:after {content:none;}

        .customoverlay {position:relative;bottom:85px;border-radius:6px;border: 1px solid #ccc;border-bottom:2px solid #ddd;float:left;}
        .customoverlay:nth-of-type(n) {border:0; box-shadow:0px 1px 2px #888;}
        .customoverlay a {display:block;text-decoration:none;color:#000;text-align:center;border-radius:6px;font-size:14px;font-weight:bold;overflow:hidden;background: #d95050;background: #d95050 url(http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/arrow_white.png) no-repeat right 14px center;}
        .customoverlay .title {display:block;text-align:center;background:#fff;margin-right:35px;padding:10px 15px;font-size:14px;font-weight:bold;}
        .customoverlay:after {content:'';position:absolute;margin-left:-12px;left:50%;bottom:-12px;width:22px;height:12px;background:url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white.png')}

        /*        #restaurant_list_wrap {color:#000;  line-height: 20px; font-size:14px; font-family: 'Noto Sans KR', sans-serif;  }
                #restaurant_find_local_list_wrap_box {border-bottom:1px solid #f0f0f0}
                #restaurant_find_local_list {padding:12px 6% 12px 4.4%;}
                #restaurant_find_local_list .fir .ic_last_pin {text-align:center;    display:inline-block; width:28px; height:28px; color: #FFFFFF;line-height: 24px;}
                #restaurant_find_local_list .price {color: #9A9A9A; letter-spacing: 0.4px;  margin-bottom:1px}
                #restaurant_find_local_list .sec {float:left; width:calc( 100% - (10px + 10.4%) );}  !* 2061 : 100% - (50px + 10.4%)*!
                #restaurant_find_local_list .fir {float:left; width:28px; margin-right:10px; margin-top:20px;  background: url('images/ic_list_pin@3x.png') no-repeat 0px 0px; background-size:28px 28px; z-index:777;  font-family: 'Roboto', sans-serif; }
                #restaurant_find_local_list .res_name {font-family: 'Noto Sans SC','Noto Sans KR', sans-serif; font-size:15px ; line-height: 22px; margin-bottom:3px; }
                #restaurant_find_local_list .res_name {display: block; overflow:hidden; word-wrap:break-word; text-overflow:ellipsis; white-space:nowrap; width:100%; }
                #restaurant_find_local_list .res_name .kor {font-family: 'Noto Sans KR', sans-serif; font-size: 15px; color: #171717; letter-spacing: 0.42px; line-height: 22px;}*/

        #snackbar {
            visibility: hidden;
            min-width: 250px;
            margin-left: -125px;
            background-color: #333;
            color: #fff;
            text-align: center;
            border-radius: 2px;
            padding: 16px;
            position: fixed;
            z-index: 3;
            left: 50%;
            bottom: 100px;
            font-size: 17px;
        }

        #snackbar.show {
            visibility: visible;
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }

        @-webkit-keyframes fadein {
            from {bottom: 0; opacity: 0;}
            to {bottom: 100px; opacity: 1;}
        }

        @keyframes fadein {
            from {bottom: 0; opacity: 0;}
            to {bottom: 100px; opacity: 1;}
        }

        @-webkit-keyframes fadeout {
            from {bottom: 100px; opacity: 1;}
            to {bottom: 0; opacity: 0;}
        }

        @keyframes fadeout {
            from {bottom: 100px; opacity: 1;}
            to {bottom: 0; opacity: 0;}
        }
    </style>
</head>
<body class="no-sidebar">
<div id="page-wrapper">
    <!-- Header Wrapper -->
    <div id="header-wrapper">
        <div class="container">

            <!-- Header -->
            <header id="header">
                <div class="inner">

                    <!-- Logo -->
                    <h1><a href="index.html" id="logo">ZeroFour</a></h1>

                    <!-- Nav -->
                    <nav id="nav">
                        <ul>
                            <li><a href="/event/eventList">Home</a></li>
                            <li>
                                <a href="#">Map</a>
                                <ul>
                                    <li><a href="/event/eventMap">Current Map</a></li>
                                    <li><a href="#">Magna phasellus</a></li>
                                    <li>
                                        <a href="#">Phasellus consequat</a>
                                        <ul>
                                            <li><a href="#">Lorem ipsum dolor</a></li>
                                            <li><a href="#">Phasellus consequat</a></li>
                                            <li><a href="#">Magna phasellus</a></li>
                                            <li><a href="#">Etiam dolore nisl</a></li>
                                        </ul>
                                    </li>
                                    <li><a href="#">Veroeros feugiat</a></li>
                                </ul>
                            </li>
                            <li><a href="left-sidebar.html">Left Sidebar</a></li>
                            <li><a href="right-sidebar.html">Right Sidebar</a></li>
                            <li class="current_page_item"><a href="no-sidebar.html">No Sidebar</a></li>
                        </ul>
                    </nav>

                </div>
            </header>

        </div>
    </div>

    <!-- Main Wrapper -->
    <div id="main-wrapper">
        <div class="wrapper style3">
            <div class="inner">
                <div class="container">
                    <div class="row">
                        <div class="4u 12u(mobile)">

                            <!-- Spotlight -->
                            <section class="box spotlight">


                                <article>

                                    <!-- 지도 확대, 축소 컨트롤 div 입니다 -->
                                    <div class="custom_zoomcontrol radius_border">
                                        <span onclick="zoomIn()"><img src="http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_plus.png" alt="확대"></span>
                                        <span onclick="zoomOut()"><img src="http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_minus.png" alt="축소"></span>
                                    </div>

                                    <div id="map" style="width:100%;height:650px;"></div>

                                    <div id="restaurant_list_wrap" style="height: 479px;">
                                        <div id="restaurant_find_local_list_wrap_box">
                                            <div id="restaurant_find_local_list">
                                                <div class="fir"><span class="ic_last_pin">1</span></div>
                                                <div class="sec">
                                                    <ul class="info"><li class="res_name">삼송점<span class="kor">(상하이 라오판디엔)</span></li>
                                                        <li class="price">상해 요리</li>
                                                        <li class="star">
                                                            <span class="txt">4 ・ 153원 / 人</span>
                                                        </li>
                                                    </ul>
                                                </div>
                                                <div class="thi" onclick="document.getElementById('transport1').submit();">
                                                    <span class="icon"><img src="/assets/css/images/map_load_pin.png"></span>
                                                    <span class="distance">0.3 km</span>
                                                </div>
                                                <div class="clear_both"></div>
                                            </div>
                                        </div>

                                        <div id="restaurant_find_local_list_wrap_box">
                                            <div id="restaurant_find_local_list">
                                                <div class="fir"><span class="ic_last_pin">2</span></div>
                                                <div class="sec">
                                                    <ul class="info"><li class="res_name">삼송점<span class="kor">(난샹만토우 예원점)</span></li>
                                                        <li class="price">딤섬/샤오롱바오</li>
                                                        <li class="star">
                                                            <span class="txt">3.5 ・ 74원 / 人</span>
                                                        </li>
                                                    </ul>
                                                </div>
                                                <div class="thi" onclick="document.getElementById('transport1').submit();">
                                                    <span class="icon"><img src="/assets/css/images/map_load_pin.png"></span>
                                                    <span class="distance">0.4 km</span>
                                                </div>
                                                <div class="clear_both"></div>
                                            </div>
                                        </div>

                                        <div id="restaurant_find_local_list_wrap_box">
                                            <div id="restaurant_find_local_list">
                                                <div class="fir"><span class="ic_last_pin">3</span></div>
                                                <div class="sec">
                                                    <ul class="info"><li class="res_name">삼송점<span class="kor">(로스크헤븐 외탄점)</span></li>
                                                        <li class="price">운남요리</li>
                                                        <li class="star">
                                                            <span class="txt">4.5 ・ 200원 / 人<</span>
                                                        </li>
                                                    </ul>
                                                </div>
                                                <div class="thi" onclick="document.getElementById('transport1').submit();">
                                                    <span class="icon"><img src="/assets/css/images/map_load_pin.png"></span>
                                                    <span class="distance">0.6 km</span>
                                                </div>
                                                <div class="clear_both"></div>
                                            </div>
                                        </div>

                                        <div id="restaurant_find_local_list_wrap_box">
                                            <div id="restaurant_find_local_list">
                                                <div class="fir"><span class="ic_last_pin">4</span></div>
                                                <div class="sec">
                                                    <ul class="info"><li class="res_name">삼송점<span class="kor">외탄점</span></li>
                                                        <li class="price">중국요리</li>
                                                        <li class="star">
                                                            <span class="txt">4.5 ・ 200원 / 人<</span>
                                                        </li>
                                                    </ul>
                                                </div>
                                                <div class="thi" onclick="document.getElementById('transport1').submit();">
                                                    <span class="icon"><a href="http://map.daum.net/?map_type=TYPE_SKYVIEW&map_hybrid=true&target=car&sX=500899&sY=1121940&eX=501611&eY=1120655&sName=%EC%84%9C%EC%9A%B8%ED%8A%B9%EB%B3%84%EC%8B%9C%20%EC%9A%A9%EC%82%B0%EA%B5%AC%20%ED%95%9C%EB%82%A8%EB%8F%99&eName=%EC%84%9C%EC%9A%B8%ED%8A%B9%EB%B3%84%EC%8B%9C%20%EC%9A%A9%EC%82%B0%EA%B5%AC%20%ED%95%9C%EB%82%A8%EB%8F%99">
                                                            <img src="/assets/css/images/map_load_pin.png"></a></span>
                                                    <span class="distance">0.6 km</span>
                                                </div>
                                                <div class="clear_both"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <footer>
                                        <a href="#" class="button alt icon fa-file-o">Continue Reading</a>
                                    </footer>
                                </article>
                            </section>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="snackbar">Some text some message..</div>
</div>

<!-- Scripts -->

<script src="/assets/js/jquery.min.js"></script>
<script src="/assets/js/jquery.dropotron.min.js"></script>
<script src="/assets/js/skel.min.js"></script>
<script src="/assets/js/skel-viewport.min.js"></script>
<script src="/assets/js/util.js"></script>
<!--[if lte IE 8]><script src="/assets/js/ie/respond.min.js"></script><![endif]-->
<script src="/assets/js/main.js"></script>
<script type="text/javascript" src="//apis.daum.net/maps/maps3.js?apikey=076df8cf69c376d5065c3bc99891a438"></script>
<script>
    function myFunction() {
        var x = document.getElementById("snackbar")
        x.className = "show";
        setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
    }

    var drawingFlag = true; // 선이 그려지고 있는 상태를 가지고 있을 변수입니다
    var moveLine; // 선이 그려지고 있을때 마우스 움직임에 따라 그려질 선 객체 입니다
    var clickLine // 마우스로 클릭한 좌표로 그려질 선 객체입니다
    var distanceOverlay; // 선의 거리정보를 표시할 커스텀오버레이 입니다
    var dots = {}; // 선이 그려지고 있을때 클릭할 때마다 클릭 지점과 거리를 표시하는 커스텀 오버레이 배열입니다.

    // 현재 위치 표시
    //    if (navigator.geolocation) {
    //
    //        // GeoLocation을 이용해서 접속 위치를 얻어옵니다
    //        navigator.geolocation.getCurrentPosition(function(position) {
    //
    //            var lat = position.coords.latitude, // 위도
    //                lon = position.coords.longitude; // 경도
    //            var locPosition = new daum.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
    //                markerContentN = '<div>현재 위치</div>';
    //
    //            // 마커와 인포윈도우를 표시합니다
    //            displayMarker(locPosition, markerContentN);
    //
    //        });
    //
    //    } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다
    //        var locPosition = new daum.maps.LatLng(37.5633, 126.993),
    //            markerContentN = 'GPS 연결을 확인하여 주십시오';
    //
    //        displayMarker(locPosition, markerContentN);
    //    }

    // 지도에 마커와 인포윈도우를 표시하는 함수입니다
    function displayMarker(markerPositionN, markerContentN) {
        // 현재 마커 위치
        var imageSrcN = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png', // 메인 마커이미지의 주소입니다
            imageSizeN = new daum.maps.Size(44, 49), // 메인  마커이미지의 크기입니다
            imageOptionN = {offset: new daum.maps.Point(27, 69)}; // 메인 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.

        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다
        var markerImageN = new daum.maps.MarkerImage(imageSrcN, imageSizeN, imageOptionN);

        // 마커를 생성합니다
        var marker = new daum.maps.Marker({
            map: map,
            position: markerPositionN,
            image: markerImageN // 마커이미지 설정
        });

        deleteCircleDot();
        clickLine = new daum.maps.Polyline({
            map: map, // 선을 표시할 지도입니다
            path: [markerPositionN], // 선을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다
            strokeWeight: 3, // 선의 두께입니다
            strokeColor: '#db4040', // 선의 색깔입니다
            strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다
            strokeStyle: 'solid' // 선의 스타일입니다
        });

        // 선이 그려지고 있을 때 마우스 움직임에 따라 선이 그려질 위치를 표시할 선을 생성합니다
        moveLine = new daum.maps.Polyline({
            strokeWeight: 0, // 선의 두께입니다
            strokeColor: '#db4040', // 선의 색깔입니다
            strokeOpacity: 0.5, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다
            strokeStyle: 'solid' // 선의 스타일입니다
        });

        // 마우스 커서의 현재 위치를 얻어옵니다
        var mousePosition = markerPositionN;
        // 마우스 클릭으로 그려진 선의 좌표 배열을 얻어옵니다
        var path = clickLine.getPath();

        // 마우스 클릭으로 그려진 마지막 좌표와 마우스 커서 위치의 좌표로 선을 표시합니다
        var movepath = [path[path.length-1], mousePosition];
        moveLine.setPath(movepath);
        moveLine.setMap(map);

        var distance = Math.round(clickLine.getLength() + moveLine.getLength()), // 선의 총 거리를 계산합니다
            content = '<div class="dotOverlay distanceInfo">현재 위치<span class="number">' + distance + '</span>m</div>'; // 커스텀오버레이에 추가될 내용입니다

        // 거리정보를 지도에 표시합니다
        showDistance(content, mousePosition);
        displayCircleDot(mousePosition, 0);

        // 마커가 지도 위에 표시되도록 설정합니다
        //marker.setMap(map);
    }


    var mapContainer = document.getElementById('map'), // 지도를 표시할 div
        mapOption = {
            center: new daum.maps.LatLng(37.650876, 126.88639), // 지도의 중심좌표
            level: 4 // 지도의 확대 레벨
        };

    var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

    // 마우스 휠로 지도 확대,축소 가능여부를 설정합니다
    map.setZoomable(false);

    var content = '<div class="customoverlay">' +
        '  <a href="http://map.daum.net/link/map/11394059" target="_blank">' +
        '    <span class="title">구의야구공원</span>' +
        '  </a>' +
        '</div>';

    var positions = [
        {
            content: content,
            latlng: new daum.maps.LatLng(37.652876, 126.88639)
        },
        {
            content: content,
            latlng: new daum.maps.LatLng(37.648876, 126.88639)
        },
        {
            content: content,
            latlng: new daum.maps.LatLng(37.650876, 126.88839)
        },
        {
            content: content,
            latlng: new daum.maps.LatLng(37.650876, 126.88439)
        }
    ];

    // 마커 이미지의 이미지 주소입니다
    var imageSrc = "http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png";

    for (var i = 0; i < positions.length; i ++) {
        // 커스텀 오버레이를 생성합니다
        var customOverlay = new daum.maps.CustomOverlay({
            map: map,
            position: positions[i].latlng,
            content: positions[i].content,
            yAnchor: 1
        });
    }















    // 현재 마커 위치
    var imageSrcN = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png', // 메인 마커이미지의 주소입니다
        imageSizeN = new daum.maps.Size(44, 49), // 메인  마커이미지의 크기입니다
        imageOptionN = {offset: new daum.maps.Point(27, 69)}; // 메인 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.

    // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다
    var markerImageN = new daum.maps.MarkerImage(imageSrcN, imageSizeN, imageOptionN),
        markerPositionN = new daum.maps.LatLng(37.5633, 126.993); // 마커가 표시될 위치입니다
    markerContentN = '<div>현재 위치</div>';

    // 마커를 생성합니다
    var marker = new daum.maps.Marker({
        map: map,
        position: markerPositionN,
        image: markerImageN // 마커이미지 설정
    });

    initClicn(markerPositionN);

    // 마커가 지도 위에 표시되도록 설정합니다
    //marker.setMap(map);







    // 지도에 클릭 이벤트를 등록합니다
    // 지도를 클릭하면 선 그리기가 시작됩니다 그려진 선이 있으면 지우고 다시 그립니다
    daum.maps.event.addListener(map, 'click', function(mouseEvent) {

        // 마우스로 클릭한 위치입니다
        var clickPosition = mouseEvent.latLng;

        // 그려지고 있는 선의 좌표 배열을 얻어옵니다
        var path = clickLine.getPath();

        // 좌표 배열에 클릭한 위치를 추가합니다
        path.push(clickPosition);

        // 다시 선에 좌표 배열을 설정하여 클릭 위치까지 선을 그리도록 설정합니다
        clickLine.setPath(path);

        var distance = Math.round(clickLine.getLength());
        displayCircleDot(clickPosition, distance);

        // 지도 오른쪽 클릭 이벤트가 발생했는데 선을 그리고있는 상태이면
        if (drawingFlag) {

            // 마우스무브로 그려진 선은 지도에서 제거합니다
            moveLine.setMap(null);
            moveLine = null;

            // 마우스 클릭으로 그린 선의 좌표 배열을 얻어옵니다
            var path = clickLine.getPath();

            // 선을 구성하는 좌표의 개수가 2개 이상이면
            if (path.length > 1) {

                // 마지막 클릭 지점에 대한 거리 정보 커스텀 오버레이를 지웁니다
                if (dots[dots.length-1].distance) {
                    dots[dots.length-1].distance.setMap(null);
                    dots[dots.length-1].distance = null;
                }

                var distance = Math.round(clickLine.getLength()), // 선의 총 거리를 계산합니다
                    content = getTimeHTML(distance); // 커스텀오버레이에 추가될 내용입니다

                // 그려진 선의 거리정보를 지도에 표시합니다
                showDistance(content, path[path.length-1]);

            }

            // 상태를 false로, 그리지 않고 있는 상태로 변경합니다
            drawingFlag = false;
        }else {

            // 선을 구성하는 좌표의 개수가 1개 이하이면
            // 지도에 표시되고 있는 선과 정보들을 지도에서 제거합니다.
            deleteClickLine();
            deleteCircleDot();
            deleteDistnce();

            var markerPositionN = new daum.maps.LatLng(37.650876, 126.88639); // 마커가 표시될 위치입니다
            initClicn(markerPositionN);
            drawingFlag = true;
        }
    });

    // 지도에 마우스무브 이벤트를 등록합니다
    // 선을 그리고있는 상태에서 마우스무브 이벤트가 발생하면 그려질 선의 위치를 동적으로 보여주도록 합니다
    daum.maps.event.addListener(map, 'mousemove', function (mouseEvent) {

        // 지도 마우스무브 이벤트가 발생했는데 선을 그리고있는 상태이면
        if (drawingFlag){

            // 마우스 커서의 현재 위치를 얻어옵니다
            var mousePosition = mouseEvent.latLng;

            // 마우스 클릭으로 그려진 선의 좌표 배열을 얻어옵니다
            var path = clickLine.getPath();

            // 마우스 클릭으로 그려진 마지막 좌표와 마우스 커서 위치의 좌표로 선을 표시합니다
            var movepath = [path[path.length-1], mousePosition];
            moveLine.setPath(movepath);
            moveLine.setMap(map);

            var distance = Math.round(clickLine.getLength() + moveLine.getLength()), // 선의 총 거리를 계산합니다
                content = '<div class="dotOverlay distanceInfo">현재 위치와의 거리 <span class="number">' + distance + '</span>m</div>'; // 커스텀오버레이에 추가될 내용입니다

            // 거리정보를 지도에 표시합니다
            showDistance(content, mousePosition);
        }
    });

    function initClicn(markerPositionN) {
        deleteCircleDot();
        clickLine = new daum.maps.Polyline({
            map: map, // 선을 표시할 지도입니다
            path: [markerPositionN], // 선을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다
            strokeWeight: 3, // 선의 두께입니다
            strokeColor: '#db4040', // 선의 색깔입니다
            strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다
            strokeStyle: 'solid' // 선의 스타일입니다
        });

        // 선이 그려지고 있을 때 마우스 움직임에 따라 선이 그려질 위치를 표시할 선을 생성합니다
        moveLine = new daum.maps.Polyline({
            strokeWeight: 0, // 선의 두께입니다
            strokeColor: '#db4040', // 선의 색깔입니다
            strokeOpacity: 0.5, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다
            strokeStyle: 'solid' // 선의 스타일입니다
        });

        // 마우스 커서의 현재 위치를 얻어옵니다
        var mousePosition = markerPositionN;
        // 마우스 클릭으로 그려진 선의 좌표 배열을 얻어옵니다
        var path = clickLine.getPath();

        // 마우스 클릭으로 그려진 마지막 좌표와 마우스 커서 위치의 좌표로 선을 표시합니다
        var movepath = [path[path.length-1], mousePosition];
        moveLine.setPath(movepath);
        moveLine.setMap(map);

        var distance = Math.round(clickLine.getLength() + moveLine.getLength()), // 선의 총 거리를 계산합니다
            content = '<div class="dotOverlay distanceInfo">현재 위치<span class="number">' + distance + '</span>m</div>'; // 커스텀오버레이에 추가될 내용입니다

        // 거리정보를 지도에 표시합니다
        showDistance(content, mousePosition);
        displayCircleDot(mousePosition, 0);
    }

    // 클릭으로 그려진 선을 지도에서 제거하는 함수입니다
    function deleteClickLine() {
        if (clickLine) {
            clickLine.setMap(null);
            clickLine = null;
        }
    }

    // 마우스 드래그로 그려지고 있는 선의 총거리 정보를 표시하거
    // 마우스 오른쪽 클릭으로 선 그리가 종료됐을 때 선의 정보를 표시하는 커스텀 오버레이를 생성하고 지도에 표시하는 함수입니다
    function showDistance(content, position) {

        if (distanceOverlay) { // 커스텀오버레이가 생성된 상태이면

            // 커스텀 오버레이의 위치와 표시할 내용을 설정합니다
            distanceOverlay.setPosition(position);
            distanceOverlay.setContent(content);

        } else { // 커스텀 오버레이가 생성되지 않은 상태이면

            // 커스텀 오버레이를 생성하고 지도에 표시합니다
            distanceOverlay = new daum.maps.CustomOverlay({
                map: map, // 커스텀오버레이를 표시할 지도입니다
                content: content,  // 커스텀오버레이에 표시할 내용입니다
                position: position, // 커스텀오버레이를 표시할 위치입니다.
                xAnchor: 0,
                yAnchor: 0,
                zIndex: 3
            });
        }
    }

    // 그려지고 있는 선의 총거리 정보와
    // 선 그리가 종료됐을 때 선의 정보를 표시하는 커스텀 오버레이를 삭제하는 함수입니다
    function deleteDistnce () {
        if (distanceOverlay) {
            distanceOverlay.setMap(null);
            distanceOverlay = null;
        }
    }

    // 선이 그려지고 있는 상태일 때 지도를 클릭하면 호출하여
    // 클릭 지점에 대한 정보 (동그라미와 클릭 지점까지의 총거리)를 표출하는 함수입니다
    function displayCircleDot(position, distance) {
        // 클릭 지점을 표시할 빨간 동그라미 커스텀오버레이를 생성합니다
        var circleOverlay = new daum.maps.CustomOverlay({
            content: '<span class="dot"></span>',
            position: position,
            zIndex: 1
        });

        // 지도에 표시합니다
        circleOverlay.setMap(map);

        if (distance > 0) {
            // 클릭한 지점까지의 그려진 선의 총 거리를 표시할 커스텀 오버레이를 생성합니다
            var distanceOverlay = new daum.maps.CustomOverlay({
                content: '<div class="dotOverlay">거리 <span class="number">' + distance + '</span>m</div>',
                position: position,
                yAnchor: 1,
                zIndex: 2
            });

            // 지도에 표시합니다
            distanceOverlay.setMap(map);
        }

        // 배열에 추가합니다
        dots.push({circle:circleOverlay, distance: distanceOverlay});
    }

    // 클릭 지점에 대한 정보 (동그라미와 클릭 지점까지의 총거리)를 지도에서 모두 제거하는 함수입니다
    function deleteCircleDot() {
        var i;

        for ( i = 0; i < dots.length; i++ ){
            if (dots[i].circle) {
                dots[i].circle.setMap(null);
            }

            if (dots[i].distance) {
                dots[i].distance.setMap(null);
            }
        }

        dots = [];
    }

    // 마우스 우클릭 하여 선 그리기가 종료됐을 때 호출하여
    // 그려진 선의 총거리 정보와 거리에 대한 도보, 자전거 시간을 계산하여
    // HTML Content를 만들어 리턴하는 함수입니다
    function getTimeHTML(distance) {

        // 도보의 시속은 평균 4km/h 이고 도보의 분속은 67m/min입니다
        var walkkTime = distance / 67 | 0;
        var walkHour = '', walkMin = '';

        // 계산한 도보 시간이 60분 보다 크면 시간으로 표시합니다
        if (walkkTime > 60) {
            walkHour = '<span class="number">' + Math.floor(walkkTime / 60) + '</span>시간 '
        }
        walkMin = '<span class="number">' + walkkTime % 60 + '</span>분'

        // 자전거의 평균 시속은 16km/h 이고 이것을 기준으로 자전거의 분속은 267m/min입니다
        var bycicleTime = distance / 227 | 0;
        var bycicleHour = '', bycicleMin = '';

        // 계산한 자전거 시간이 60분 보다 크면 시간으로 표출합니다
        if (bycicleTime > 60) {
            bycicleHour = '<span class="number">' + Math.floor(bycicleTime / 60) + '</span>시간 '
        }
        bycicleMin = '<span class="number">' + bycicleTime % 60 + '</span>분'

        // 거리와 도보 시간, 자전거 시간을 가지고 HTML Content를 만들어 리턴합니다
        var content = '<ul class="dotOverlay distanceInfo">';
        content += '    <li>';
        content += '        <span class="label">총거리</span><span class="number">' + distance + '</span>m';
        content += '    </li>';
        content += '    <li>';
        content += '        <span class="label">도보</span>' + walkHour + walkMin;
        content += '    </li>';
        content += '    <li>';
        content += '        <span class="label">자전거</span>' + bycicleHour + bycicleMin;
        content += '    </li>';
        content += '</ul>'

        return content;
    }

    // 지도타입 컨트롤의 지도 또는 스카이뷰 버튼을 클릭하면 호출되어 지도타입을 바꾸는 함수입니다
    function setMapType(maptype) {
        var roadmapControl = document.getElementById('btnRoadmap');
        var skyviewControl = document.getElementById('btnSkyview');
        if (maptype === 'roadmap') {
            map.setMapTypeId(daum.maps.MapTypeId.ROADMAP);
            roadmapControl.className = 'selected_btn';
            skyviewControl.className = 'btn';
        } else {
            map.setMapTypeId(daum.maps.MapTypeId.HYBRID);
            skyviewControl.className = 'selected_btn';
            roadmapControl.className = 'btn';
        }
    }

    // 지도 확대, 축소 컨트롤에서 확대 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
    function zoomIn() {
        map.setLevel(map.getLevel() - 1);
    }

    // 지도 확대, 축소 컨트롤에서 축소 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
    function zoomOut() {
        map.setLevel(map.getLevel() + 1);
    }
</script>
</body>
</html>